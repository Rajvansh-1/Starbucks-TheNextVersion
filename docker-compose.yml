version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: starbucks-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: starbucks_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - starbucks-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: starbucks-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - starbucks-network

  # Backend API
  backend:
    build: ./backend
    container_name: starbucks-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/starbucks_db?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRE: 7d
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-this-in-production
      JWT_REFRESH_EXPIRE: 30d
      CORS_ORIGIN: http://localhost:3000
      STRIPE_SECRET_KEY: sk_test_your-stripe-secret-key
      STRIPE_PUBLISHABLE_KEY: pk_test_your-stripe-publishable-key
      STRIPE_WEBHOOK_SECRET: whsec_your-stripe-webhook-secret
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USERNAME: your-email@gmail.com
      EMAIL_PASSWORD: your-app-password
      EMAIL_FROM: noreply@starbucks.com
      CLOUDINARY_CLOUD_NAME: your-cloudinary-cloud-name
      CLOUDINARY_API_KEY: your-cloudinary-api-key
      CLOUDINARY_API_SECRET: your-cloudinary-api-secret
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - starbucks-network

  # Frontend (if you want to serve it from the same setup)
  frontend:
    build: .
    container_name: starbucks-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - starbucks-network

volumes:
  mongodb_data:
  redis_data:


networks:
  starbucks-network:
    driver: bridge
